// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Application.Model.Lobby = (function(_super) {
    __extends(Lobby, _super);

    function Lobby() {
      return Lobby.__super__.constructor.apply(this, arguments);
    }

    return Lobby;

  })(Backbone.Model);

  Application.View.Lobby = (function(_super) {
    __extends(Lobby, _super);

    function Lobby() {
      return Lobby.__super__.constructor.apply(this, arguments);
    }

    Lobby.prototype.node = '#jsMenu';

    Lobby.prototype.modelHandler = {
      change: function() {}
    };

    Lobby.prototype.init = function() {};

    return Lobby;

  })(Backbone.View);

  Application.Collection.Menu = (function(_super) {
    __extends(Menu, _super);

    function Menu() {
      return Menu.__super__.constructor.apply(this, arguments);
    }

    Menu.prototype.model = Application.Model.MenuItem;

    Menu.prototype.setTitle = function(title) {
      this.title = title;
      return this.trigger('title', title);
    };

    Menu.prototype.title = '';

    return Menu;

  })(Backbone.Collection);

  Application.View.Menu = (function(_super) {
    __extends(Menu, _super);

    function Menu() {
      return Menu.__super__.constructor.apply(this, arguments);
    }

    Menu.prototype.template = 'tplMenu';

    Menu.prototype.$title = null;

    Menu.prototype.collectionHandler = {
      Menu: {}
    };

    Menu.prototype.init = function() {
      var $title;
      return $title = this.$('.jsMenuTitle');
    };

    return Menu;

  })(Backbone.View);

  Application.Model.MenuItem = (function(_super) {
    __extends(MenuItem, _super);

    function MenuItem() {
      return MenuItem.__super__.constructor.apply(this, arguments);
    }

    MenuItem.prototype.object = null;

    MenuItem.prototype.defaults = {
      title: 'MenuItem',
      active: false,
      value: null,
      values: null,
      trigger: null
    };

    MenuItem.prototype.init = function() {
      return _dump(arguments);
    };

    return MenuItem;

  })(Backbone.Model);

  Application.View.MenuItem = (function(_super) {
    __extends(MenuItem, _super);

    function MenuItem() {
      return MenuItem.__super__.constructor.apply(this, arguments);
    }

    MenuItem.prototype.template = 'tplMenuItem';

    MenuItem.prototype.modelHandler = {};

    return MenuItem;

  })(Backbone.View);

}).call(this);

//# sourceMappingURL=menu.map

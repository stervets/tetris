// Generated by CoffeeScript 2.7.0
(function() {
  // MAIN LOBBY MODEL
  Application.Model.Lobby = class Lobby extends Backbone.Model {};

  Application.View.Lobby = (function() {
    // MAIN LOBBY VIEW
    class Lobby extends Backbone.View {
      init() {
        this.mainMenu = Application.createMenu('Main menu', {
          'Single player': function() {
            return Application.Game.switch(GAME_MODE.SINGLE_PLAYER);
          },
          'Player vs CPU': function() {
            return Application.Game.switch(GAME_MODE.PLAYER_VS_CPU);
          },
          'CPU vs CPU': function() {
            return Application.Game.switch(GAME_MODE.CPU_VS_CPU);
          }
        }, this);
        return this.$el.append(this.mainMenu.view.$el);
      }

    };

    Lobby.prototype.node = '#jsLobby';

    Lobby.prototype.mainMenu = null;

    Lobby.prototype.modelHandler = {
      change: function() {}
    };

    return Lobby;

  }).call(this);

  Application.Collection.Menu = (function() {
    // MENU COLLECTION
    class Menu extends Backbone.Collection {
      setTitle(title) {
        this.title = title;
        return this.trigger('title', title);
      }

    };

    Menu.prototype.model = Application.Model.MenuItem;

    Menu.prototype.title = '';

    return Menu;

  }).call(this);

  Application.View.Menu = (function() {
    // MENU COLLECTION VIEW
    class Menu extends Backbone.View {
      render() {
        return this.$el = $(this.node({
          title: this.collection.Menu.title
        }));
      }

      init() {
        var $title;
        this.render();
        return $title = this.$('.jsMenuTitle');
      }

    };

    Menu.prototype.template = 'tplMenu';

    Menu.prototype.$title = null;

    Menu.prototype.collectionHandler = {
      Menu: {
        title: function(title) {
          return this.$title.text(title);
        },
        add: function(model) {
          var menuItemView;
          menuItemView = new Application.View.MenuItem({
            model: model
          });
          return this.$('.jsMenuItems').append(menuItemView.$el);
        }
      }
    };

    return Menu;

  }).call(this);

  Application.Model.MenuItem = (function() {
    // MENU ITEM
    class MenuItem extends Backbone.Model {
      init(params) {
        if (params.triggerHandler != null) {
          this.triggerHandler = params.triggerHandler;
        }
        if (params.context != null) {
          return this.context = params.context;
        }
      }

    };

    MenuItem.prototype.triggerHandler = null;

    MenuItem.prototype.context = MenuItem;

    MenuItem.prototype.defaults = {
      title: 'MenuItem',
      active: false,
      value: null,
      values: null
    };

    return MenuItem;

  }).call(this);

  Application.View.MenuItem = (function() {
    // MENU ITEM VIEW
    class MenuItem extends Backbone.View {};

    MenuItem.prototype.template = 'tplMenuItem';

    MenuItem.prototype.modelHandler = {};

    MenuItem.prototype.events = {
      'click': function() {
        if (!Application.Sound) {
          Application.Sound = new Application.Class.Sound();
        }
        //disabled = 'button-disabled'

        //            if window.localStorage.getItem('jsControlSound') is 'true'
        //              @$('#jsControlSound').addClass(disabled)
        //              Application.Sound.switchAudio(1, false)

        //            if window.localStorage.getItem('jsControlMusic') is 'true'
        //              @$('#jsControlMusic').addClass(disabled)
        //              Application.Sound.switchAudio(0, false)
        return this.model.triggerHandler.apply(this.model.context);
      }
    };

    return MenuItem;

  }).call(this);

}).call(this);

//# sourceMappingURL=menu.js.map

{
  "version": 3,
  "file": "audio.js",
  "sourceRoot": "/",
  "sources": [
    "audio.coffee"
  ],
  "names": [],
  "mappings": ";AAAA;EAAM,WAAW,CAAC,KAAK,CAAC;IAAxB,MAAA,MAAA,QAAsC,QAAQ,CAAC,WAA/C;MASI,IAAM,CAAC,IAAD,CAAA;AACV,YAAA;QAAQ,IAAG,IAAC,CAAA,YAAJ;UACI,KAAA,GAAQ,IAAC,CAAA,MAAM,CAAC,IAAC,CAAA,KAAF;UACf,KAAK,CAAC,GAAN,GAAY;UACZ,KAAK,CAAC,IAAN,CAAA;UACA,KAAK,CAAC,MAAN,GAAe;UACf,KAAK,CAAC,IAAN,CAAA;UACA,IAAc,EAAE,IAAC,CAAA,KAAH,IAAU,iBAAxB;mBAAA,IAAC,CAAA,KAAD,GAAS,EAAT;WANJ;;MADE;;MASN,SAAW,CAAA,CAAA;QACP,IAAG,IAAC,CAAA,YAAJ;UACI,IAAC,CAAA,WAAD,GAAe;UACf,IAAC,CAAA,KAAK,CAAC,IAAP,CAAA;iBACA,IAAC,CAAA,KAAK,CAAC,IAAP,CAAA,EAHJ;;MADO;;MAMX,SAAW,CAAA,CAAA;QACP,IAAC,CAAA,KAAK,CAAC,KAAP,CAAA;eACA,IAAC,CAAA,WAAD,GAAe;MAFR;;MAIX,WAAa,CAAC,IAAD,EAAO,KAAP,CAAA;QACT,IAAG,IAAH;iBACI,IAAC,CAAA,YAAD,GAAgB,MADpB;SAAA,MAAA;UAGI,IAAC,CAAA,YAAD,GAAgB;UAChB,IAAG,KAAH;YACI,IAAiB,CAAI,IAAC,CAAA,WAAtB;qBAAA,IAAC,CAAA,KAAK,CAAC,IAAP,CAAA,EAAA;aADJ;WAAA,MAAA;mBAGI,IAAC,CAAA,KAAK,CAAC,KAAP,CAAA,EAHJ;WAJJ;;MADS;;MAUb,UAAY,CAAA,CAAA;AAChB,YAAA,CAAA,EAAA,KAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,OAAA,EAAA,KAAA,EAAA;QAAQ,IAAW,oBAAX;AAAA,iBAAA;;QACA,IAAC,CAAA,KAAD,GAAS,IAAI,KAAJ,CAAU,GAAG,CAAC,KAAK,CAAC,UAApB;QACT,IAAC,CAAA,KAAK,CAAC,MAAP,GAAgB;QAChB,IAAC,CAAA,KAAK,CAAC,IAAP,CAAA;QACA,IAAC,CAAA,KAAK,CAAC,gBAAP,CAAwB,OAAxB,EAAiC,QAAA,CAAA,CAAA;UACR,IAAI,CAAC,WAAL,GAAmB;iBACnB,IAAI,CAAC,IAAL,CAAA;QAFQ,CAAjC,EAGkB,KAHlB;AAKA;QAAA,KAAA,UAAA;;UACI,KAAA,GAAQ,IAAI,KAAJ,CAAU,GAAV;UACR,KAAK,CAAC,IAAN,CAAA;QAFJ;AAIA;AAAA;QAAA,KAAA,sCAAA;;UACI,IAAC,CAAA,MAAM,CAAC,KAAD,CAAP,GAAiB,IAAI,KAAJ,CAAA;UACjB,IAAC,CAAA,MAAM,CAAC,KAAD,CAAO,CAAC,KAAf,CAAA;uBACA,IAAC,CAAA,MAAM,CAAC,KAAD,CAAO,CAAC,SAAf,GAA2B;QAH/B,CAAA;;MAdQ;;IAtChB;;oBACI,MAAA,GAAQ;;;;;;oBACR,KAAA,GAAO;;oBACP,KAAA,GAAO,WAAW,CAAC,KAAK,CAAC;;oBACzB,KAAA,GAAO;;oBACP,YAAA,GAAc;;oBACd,YAAA,GAAc;;oBACd,WAAA,GAAa;;;;;AAPjB",
  "sourcesContent": [
    "class Application.Class.Sound extends Backbone.Collection\n    buffer: [0...AUDIO_BUFFER_SIZE]\n    index: 0\n    model: Application.Model.Sound\n    music: null\n    soundEnabled: true\n    musicEnabled: true\n    musicPaused: false\n\n    play: (file)->\n        if @soundEnabled\n            sound = @buffer[@index]\n            sound.src = file\n            sound.load()\n            sound.volume = 1\n            sound.play()\n            @index = 0 if ++@index>=AUDIO_BUFFER_SIZE\n\n    musicPlay: ->\n        if @musicEnabled\n            @musicPaused = false\n            @music.load()\n            @music.play()\n\n    musicStop: ->\n        @music.pause()\n        @musicPaused = true\n\n    switchAudio: (type, value)->\n        if type\n            @soundEnabled = value\n        else\n            @musicEnabled = value\n            if value\n                @music.play() if not @musicPaused\n            else\n                @music.pause()\n\n    initialize: ->\n        return if !window.Audio?\n        @music = new Audio(RES.AUDIO.GAME_MUSIC)\n        @music.volume = 1\n        @music.load()\n        @music.addEventListener('ended', ->\n                                 this.currentTime = 0;\n                                 this.play();\n                        , false)\n\n        for key, val of RES.AUDIO\n            sound = new Audio(val)\n            sound.load();\n\n        for index in @buffer\n            @buffer[index] = new Audio()\n            @buffer[index].pause()\n            @buffer[index].startTime = 0\n\n"
  ]
}
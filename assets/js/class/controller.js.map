{
  "version": 3,
  "file": "controller.js",
  "sourceRoot": "/",
  "sources": [
    "controller.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "class Application.Collection.Controller extends Backbone.Collection\n\n### User keyboard control ###\nclass Application.Model.Controller.User extends Backbone.Model\n    defaults:\n        keys: {}\n        delay: DROP_DELAY\n        play: false\n\n    pool: null\n\n    setKey: (key, action)->\n        Application.keyMapper @, key, action\n        @attributes.keys[key] = action\n\n    setKeys: (keys)->\n        keys = [keys] if not _.isArray keys[0]\n        @setKey(key[0], key[1]) for key in keys\n\n    nextMove: =>\n        @trigger('action','moveDown') if @get 'play'\n        setTimeout(@nextMove, @attributes.delay)\n\n    handler:\n        action: (name, vars...)->\n            @pool.trigger('action', name, vars) if (@attributes.play or name is ACTION.PAUSE) and @pool?\n\n    ###\n        setPath: (res)->\n            @pool.shape.hint =\n                x: res.x\n                y: res.y\n                angle: res.angle\n    ###\n    poolHandler:\n        pause: ->\n            @set 'play', !@attributes.play\n\n        start: ->\n            @set 'play', true\n\n        stop: ->\n            @set 'play', false\n\n    ###\n        nextShape: ->\n            @action = []\n            shape = @pool.shape.attributes\n            Application.worker.postMessage\n                trigger: 'findPlace'\n                vars:\n                    matrix: @pool.attributes.cells\n                    shape: shape.shape\n                    angle: shape.angle\n                    shapeIndex: shape.index\n                    x: shape.x\n                    id: @id\n    ###\n    init: (keys)->\n        @set 'id', Application.genId('Controller')\n\n    start:->\n        keys = [\n          [KEY.LEFT, ACTION.MOVE_LEFT]\n          [KEY.RIGHT, ACTION.MOVE_RIGHT]\n          [KEY.DOWN, ACTION.MOVE_DOWN]\n          [KEY.UP, ACTION.ROTATE_RIGHT]\n          [KEY.SPACE, ACTION.DROP]\n          [KEY.P, ACTION.PAUSE]\n          [KEY.ENTER, ACTION.GET_SCORE]\n        ] if not keys?\n        @setKeys(keys)\n        @nextMove()\n\n\n\n##############################\n#\n#\n# AI controller\n#\n#\n##############################\n\nclass Application.Model.Controller.AI extends Backbone.Model\n    defaults:\n        delay: DROP_DELAY\n        actionDelay: 400\n        play: false\n        formula: 0\n        smart: 1\n\n    pool: null\n    action:[]\n\n    timeout: null\n\n    timer: =>\n        if @get 'play'\n            @trigger('action','moveDown')\n            @timeout = setTimeout(@timer, @attributes.delay)\n\n    timerStop: ->\n        clearTimeout(@timeout)\n\n    nextAction: =>\n        if @attributes.play and @action.length\n            action = @action.shift()\n            @trigger 'action', action\n\n        delayShift = @attributes.actionDelay/2\n        delay = rand(@attributes.actionDelay-delayShift, @attributes.actionDelay+delayShift)\n        setTimeout(@nextAction, delay)\n\n    findPlace: ->\n        @action = []\n        shape = @pool.shape.attributes\n        Application.worker.postMessage\n            trigger: 'findPlace'\n            vars:\n                matrix: @pool.attributes.cells\n                shape: shape.shape\n                angle: shape.angle\n                shapeIndex: shape.index\n                x: shape.x\n                id: @id\n                formula: @attributes.formula\n                smart: @attributes.smart\n\n    handler:\n        action: (name, vars...)->\n            @pool.trigger('action', name, vars) if (@attributes.play or name is ACTION.PAUSE) and @pool?\n\n        setPath: (result)->\n            #_dump result\n            @action = result.path\n\n        'change:play':->\n            @findPlace() if @get 'play'\n\n    poolHandler:\n        pause: ->\n            @set 'play', !@attributes.play\n\n        start: ->\n            @set 'play', true\n\n        stop: ->\n            @set 'play', false\n\n        putShape: ->\n            @timerStop()\n\n        nextShape: ->\n            if @get 'play'\n                @findPlace()\n                @timer()\n\n    init: (params)->\n        @set 'id', Application.genId('Controller')\n        console.log \"FORMULA: #{@attributes.formula}, SMART: #{@attributes.smart}\"\n\n    start: ->\n      @timer()\n      @nextAction()\n"
  ]
}